/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db.tables;


import com.github.ssullivan.mbt.gtfs.db.Keys;
import com.github.ssullivan.mbt.gtfs.db.Public;
import com.github.ssullivan.mbt.gtfs.db.tables.records.TripsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Trips extends TableImpl<TripsRecord> {

    private static final long serialVersionUID = 1983530716;

    /**
     * The reference instance of <code>public.trips</code>
     */
    public static final Trips TRIPS = new Trips();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TripsRecord> getRecordType() {
        return TripsRecord.class;
    }

    /**
     * The column <code>public.trips.feed_index</code>.
     */
    public final TableField<TripsRecord, Long> FEED_INDEX = createField("feed_index", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.trips.trip_index</code>.
     */
    public final TableField<TripsRecord, Long> TRIP_INDEX = createField("trip_index", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('codegen.trips_trip_index_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.trips.route_id</code>.
     */
    public final TableField<TripsRecord, Integer> ROUTE_ID = createField("route_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.trips.service_index</code>.
     */
    public final TableField<TripsRecord, Long> SERVICE_INDEX = createField("service_index", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.trips.trip_id</code>.
     */
    public final TableField<TripsRecord, String> TRIP_ID = createField("trip_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.trips.trip_headsign</code>.
     */
    public final TableField<TripsRecord, String> TRIP_HEADSIGN = createField("trip_headsign", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.trips.trip_short_name</code>.
     */
    public final TableField<TripsRecord, String> TRIP_SHORT_NAME = createField("trip_short_name", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.trips.direction_id</code>.
     */
    public final TableField<TripsRecord, Integer> DIRECTION_ID = createField("direction_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.trips.block_id</code>.
     */
    public final TableField<TripsRecord, Integer> BLOCK_ID = createField("block_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.trips.shape_index</code>.
     */
    public final TableField<TripsRecord, Long> SHAPE_INDEX = createField("shape_index", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.trips</code> table reference
     */
    public Trips() {
        this("trips", null);
    }

    /**
     * Create an aliased <code>public.trips</code> table reference
     */
    public Trips(String alias) {
        this(alias, TRIPS);
    }

    private Trips(String alias, Table<TripsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Trips(String alias, Table<TripsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TripsRecord, Long> getIdentity() {
        return Keys.IDENTITY_TRIPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TripsRecord> getPrimaryKey() {
        return Keys.TRIPS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TripsRecord>> getKeys() {
        return Arrays.<UniqueKey<TripsRecord>>asList(Keys.FEED_TRIP_UNIQUE, Keys.TRIPS_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Trips as(String alias) {
        return new Trips(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Trips rename(String name) {
        return new Trips(name, null);
    }
}
