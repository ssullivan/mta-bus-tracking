/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db.tables.records;


import com.github.ssullivan.mbt.gtfs.db.tables.Shapes;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShapesRecord extends UpdatableRecordImpl<ShapesRecord> implements Record7<Long, Long, String, Double, Double, Integer, BigDecimal> {

    private static final long serialVersionUID = -1915151365;

    /**
     * Setter for <code>public.shapes.feed_index</code>.
     */
    public void setFeedIndex(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.shapes.feed_index</code>.
     */
    public Long getFeedIndex() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.shapes.shape_index</code>.
     */
    public void setShapeIndex(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.shapes.shape_index</code>.
     */
    public Long getShapeIndex() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.shapes.shape_id</code>.
     */
    public void setShapeId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.shapes.shape_id</code>.
     */
    public String getShapeId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.shapes.shape_pt_lat</code>.
     */
    public void setShapePtLat(Double value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.shapes.shape_pt_lat</code>.
     */
    public Double getShapePtLat() {
        return (Double) get(3);
    }

    /**
     * Setter for <code>public.shapes.shape_pt_lon</code>.
     */
    public void setShapePtLon(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.shapes.shape_pt_lon</code>.
     */
    public Double getShapePtLon() {
        return (Double) get(4);
    }

    /**
     * Setter for <code>public.shapes.shape_pt_sequence</code>.
     */
    public void setShapePtSequence(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.shapes.shape_pt_sequence</code>.
     */
    public Integer getShapePtSequence() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.shapes.shape_dist_traveled</code>.
     */
    public void setShapeDistTraveled(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.shapes.shape_dist_traveled</code>.
     */
    public BigDecimal getShapeDistTraveled() {
        return (BigDecimal) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Long, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, String, Double, Double, Integer, BigDecimal> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Long, Long, String, Double, Double, Integer, BigDecimal> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Shapes.SHAPES.FEED_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Shapes.SHAPES.SHAPE_INDEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Shapes.SHAPES.SHAPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field4() {
        return Shapes.SHAPES.SHAPE_PT_LAT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field5() {
        return Shapes.SHAPES.SHAPE_PT_LON;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Shapes.SHAPES.SHAPE_PT_SEQUENCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return Shapes.SHAPES.SHAPE_DIST_TRAVELED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getFeedIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getShapeIndex();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getShapeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value4() {
        return getShapePtLat();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value5() {
        return getShapePtLon();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getShapePtSequence();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getShapeDistTraveled();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value1(Long value) {
        setFeedIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value2(Long value) {
        setShapeIndex(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value3(String value) {
        setShapeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value4(Double value) {
        setShapePtLat(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value5(Double value) {
        setShapePtLon(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value6(Integer value) {
        setShapePtSequence(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord value7(BigDecimal value) {
        setShapeDistTraveled(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ShapesRecord values(Long value1, Long value2, String value3, Double value4, Double value5, Integer value6, BigDecimal value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ShapesRecord
     */
    public ShapesRecord() {
        super(Shapes.SHAPES);
    }

    /**
     * Create a detached, initialised ShapesRecord
     */
    public ShapesRecord(Long feedIndex, Long shapeIndex, String shapeId, Double shapePtLat, Double shapePtLon, Integer shapePtSequence, BigDecimal shapeDistTraveled) {
        super(Shapes.SHAPES);

        set(0, feedIndex);
        set(1, shapeIndex);
        set(2, shapeId);
        set(3, shapePtLat);
        set(4, shapePtLon);
        set(5, shapePtSequence);
        set(6, shapeDistTraveled);
    }
}
