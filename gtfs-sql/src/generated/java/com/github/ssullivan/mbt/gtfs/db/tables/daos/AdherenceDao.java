/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db.tables.daos;


import com.github.ssullivan.mbt.gtfs.db.tables.Adherence;
import com.github.ssullivan.mbt.gtfs.db.tables.records.AdherenceRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record5;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdherenceDao extends DAOImpl<AdherenceRecord, com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence, Record5<Timestamp, Byte, String, Byte, Integer>> {

    /**
     * Create a new AdherenceDao without any configuration
     */
    public AdherenceDao() {
        super(Adherence.ADHERENCE, com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence.class);
    }

    /**
     * Create a new AdherenceDao with an attached configuration
     */
    public AdherenceDao(Configuration configuration) {
        super(Adherence.ADHERENCE, com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record5<Timestamp, Byte, String, Byte, Integer> getId(com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence object) {
        return compositeKeyRecord(object.getDate(), object.getHour(), object.getRouteId(), object.getDirectionId(), object.getStopId());
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByDate(Timestamp... values) {
        return fetch(Adherence.ADHERENCE.DATE, values);
    }

    /**
     * Fetch records that have <code>hour IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByHour(Byte... values) {
        return fetch(Adherence.ADHERENCE.HOUR, values);
    }

    /**
     * Fetch records that have <code>route_id IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByRouteId(String... values) {
        return fetch(Adherence.ADHERENCE.ROUTE_ID, values);
    }

    /**
     * Fetch records that have <code>direction_id IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByDirectionId(Byte... values) {
        return fetch(Adherence.ADHERENCE.DIRECTION_ID, values);
    }

    /**
     * Fetch records that have <code>stop_id IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByStopId(Integer... values) {
        return fetch(Adherence.ADHERENCE.STOP_ID, values);
    }

    /**
     * Fetch records that have <code>early IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByEarly(Integer... values) {
        return fetch(Adherence.ADHERENCE.EARLY, values);
    }

    /**
     * Fetch records that have <code>on_time IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByOnTime(Integer... values) {
        return fetch(Adherence.ADHERENCE.ON_TIME, values);
    }

    /**
     * Fetch records that have <code>late IN (values)</code>
     */
    public List<com.github.ssullivan.mbt.gtfs.db.tables.pojos.Adherence> fetchByLate(Integer... values) {
        return fetch(Adherence.ADHERENCE.LATE, values);
    }
}
