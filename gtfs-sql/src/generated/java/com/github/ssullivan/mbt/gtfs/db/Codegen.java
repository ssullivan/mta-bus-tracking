/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db;


import com.github.ssullivan.mbt.gtfs.db.tables.Adherence;
import com.github.ssullivan.mbt.gtfs.db.tables.Agency;
import com.github.ssullivan.mbt.gtfs.db.tables.Calendar;
import com.github.ssullivan.mbt.gtfs.db.tables.CalendarDates;
import com.github.ssullivan.mbt.gtfs.db.tables.Events;
import com.github.ssullivan.mbt.gtfs.db.tables.Feeds;
import com.github.ssullivan.mbt.gtfs.db.tables.Positions;
import com.github.ssullivan.mbt.gtfs.db.tables.Routes;
import com.github.ssullivan.mbt.gtfs.db.tables.SchemaVersion;
import com.github.ssullivan.mbt.gtfs.db.tables.ServiceIndexesPerDate;
import com.github.ssullivan.mbt.gtfs.db.tables.Shapes;
import com.github.ssullivan.mbt.gtfs.db.tables.StopTimes;
import com.github.ssullivan.mbt.gtfs.db.tables.Stops;
import com.github.ssullivan.mbt.gtfs.db.tables.Trips;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Codegen extends SchemaImpl {

    private static final long serialVersionUID = -890478594;

    /**
     * The reference instance of <code>codegen</code>
     */
    public static final Codegen CODEGEN = new Codegen();

    /**
     * The table <code>codegen.adherence</code>.
     */
    public final Adherence ADHERENCE = com.github.ssullivan.mbt.gtfs.db.tables.Adherence.ADHERENCE;

    /**
     * The table <code>codegen.agency</code>.
     */
    public final Agency AGENCY = com.github.ssullivan.mbt.gtfs.db.tables.Agency.AGENCY;

    /**
     * The table <code>codegen.calendar</code>.
     */
    public final Calendar CALENDAR = com.github.ssullivan.mbt.gtfs.db.tables.Calendar.CALENDAR;

    /**
     * The table <code>codegen.calendar_dates</code>.
     */
    public final CalendarDates CALENDAR_DATES = com.github.ssullivan.mbt.gtfs.db.tables.CalendarDates.CALENDAR_DATES;

    /**
     * The table <code>codegen.events</code>.
     */
    public final Events EVENTS = com.github.ssullivan.mbt.gtfs.db.tables.Events.EVENTS;

    /**
     * The table <code>codegen.feeds</code>.
     */
    public final Feeds FEEDS = com.github.ssullivan.mbt.gtfs.db.tables.Feeds.FEEDS;

    /**
     * The table <code>codegen.positions</code>.
     */
    public final Positions POSITIONS = com.github.ssullivan.mbt.gtfs.db.tables.Positions.POSITIONS;

    /**
     * The table <code>codegen.routes</code>.
     */
    public final Routes ROUTES = com.github.ssullivan.mbt.gtfs.db.tables.Routes.ROUTES;

    /**
     * The table <code>codegen.schema_version</code>.
     */
    public final SchemaVersion SCHEMA_VERSION = com.github.ssullivan.mbt.gtfs.db.tables.SchemaVersion.SCHEMA_VERSION;

    /**
     * The table <code>codegen.service_indexes_per_date</code>.
     */
    public final ServiceIndexesPerDate SERVICE_INDEXES_PER_DATE = com.github.ssullivan.mbt.gtfs.db.tables.ServiceIndexesPerDate.SERVICE_INDEXES_PER_DATE;

    /**
     * The table <code>codegen.shapes</code>.
     */
    public final Shapes SHAPES = com.github.ssullivan.mbt.gtfs.db.tables.Shapes.SHAPES;

    /**
     * The table <code>codegen.stop_times</code>.
     */
    public final StopTimes STOP_TIMES = com.github.ssullivan.mbt.gtfs.db.tables.StopTimes.STOP_TIMES;

    /**
     * The table <code>codegen.stops</code>.
     */
    public final Stops STOPS = com.github.ssullivan.mbt.gtfs.db.tables.Stops.STOPS;

    /**
     * The table <code>codegen.trips</code>.
     */
    public final Trips TRIPS = com.github.ssullivan.mbt.gtfs.db.tables.Trips.TRIPS;

    /**
     * No further instances allowed
     */
    private Codegen() {
        super("codegen", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.AGENCY_AGENCY_INDEX_SEQ,
            Sequences.CALENDAR_SERVICE_INDEX_SEQ,
            Sequences.FEEDS_FEED_INDEX_SEQ,
            Sequences.ROUTES_ROUTE_INDEX_SEQ,
            Sequences.SHAPES_SHAPE_INDEX_SEQ,
            Sequences.STOPS_STOP_INDEX_SEQ,
            Sequences.TRIPS_TRIP_INDEX_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Adherence.ADHERENCE,
            Agency.AGENCY,
            Calendar.CALENDAR,
            CalendarDates.CALENDAR_DATES,
            Events.EVENTS,
            Feeds.FEEDS,
            Positions.POSITIONS,
            Routes.ROUTES,
            SchemaVersion.SCHEMA_VERSION,
            ServiceIndexesPerDate.SERVICE_INDEXES_PER_DATE,
            Shapes.SHAPES,
            StopTimes.STOP_TIMES,
            Stops.STOPS,
            Trips.TRIPS);
    }
}
