/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db;


import com.github.ssullivan.mbt.gtfs.db.tables.Adherence;
import com.github.ssullivan.mbt.gtfs.db.tables.Agency;
import com.github.ssullivan.mbt.gtfs.db.tables.Calendar;
import com.github.ssullivan.mbt.gtfs.db.tables.Events;
import com.github.ssullivan.mbt.gtfs.db.tables.Feeds;
import com.github.ssullivan.mbt.gtfs.db.tables.Positions;
import com.github.ssullivan.mbt.gtfs.db.tables.Routes;
import com.github.ssullivan.mbt.gtfs.db.tables.SchemaVersion;
import com.github.ssullivan.mbt.gtfs.db.tables.Shapes;
import com.github.ssullivan.mbt.gtfs.db.tables.StopTimes;
import com.github.ssullivan.mbt.gtfs.db.tables.Stops;
import com.github.ssullivan.mbt.gtfs.db.tables.Trips;
import com.github.ssullivan.mbt.gtfs.db.tables.records.AdherenceRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.AgencyRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.CalendarRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.EventsRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.FeedsRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.PositionsRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.RoutesRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.SchemaVersionRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.ShapesRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.StopTimesRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.StopsRecord;
import com.github.ssullivan.mbt.gtfs.db.tables.records.TripsRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>codegen</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AgencyRecord, Long> IDENTITY_AGENCY = Identities0.IDENTITY_AGENCY;
    public static final Identity<CalendarRecord, Long> IDENTITY_CALENDAR = Identities0.IDENTITY_CALENDAR;
    public static final Identity<FeedsRecord, Long> IDENTITY_FEEDS = Identities0.IDENTITY_FEEDS;
    public static final Identity<RoutesRecord, Long> IDENTITY_ROUTES = Identities0.IDENTITY_ROUTES;
    public static final Identity<ShapesRecord, Long> IDENTITY_SHAPES = Identities0.IDENTITY_SHAPES;
    public static final Identity<StopsRecord, Long> IDENTITY_STOPS = Identities0.IDENTITY_STOPS;
    public static final Identity<TripsRecord, Long> IDENTITY_TRIPS = Identities0.IDENTITY_TRIPS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AdherenceRecord> ADHERENCE_PRIMARY_KEY = UniqueKeys0.ADHERENCE_PRIMARY_KEY;
    public static final UniqueKey<AgencyRecord> AGENCY_PKEY = UniqueKeys0.AGENCY_PKEY;
    public static final UniqueKey<AgencyRecord> FEED_AGENCY_UNIQUE = UniqueKeys0.FEED_AGENCY_UNIQUE;
    public static final UniqueKey<CalendarRecord> CALENDAR_PKEY = UniqueKeys0.CALENDAR_PKEY;
    public static final UniqueKey<EventsRecord> EVENTS_PRIMARY_KEY = UniqueKeys0.EVENTS_PRIMARY_KEY;
    public static final UniqueKey<FeedsRecord> FEEDS_PKEY = UniqueKeys0.FEEDS_PKEY;
    public static final UniqueKey<PositionsRecord> POSITIONS_PRIMARY_KEY = UniqueKeys0.POSITIONS_PRIMARY_KEY;
    public static final UniqueKey<RoutesRecord> FEED_ROUTE_UNIQUE = UniqueKeys0.FEED_ROUTE_UNIQUE;
    public static final UniqueKey<RoutesRecord> ROUTES_PKEY = UniqueKeys0.ROUTES_PKEY;
    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;
    public static final UniqueKey<ShapesRecord> SHAPES_PRIMARY_KEY = UniqueKeys0.SHAPES_PRIMARY_KEY;
    public static final UniqueKey<StopTimesRecord> STOP_TIMES_PRIMARY_KEY = UniqueKeys0.STOP_TIMES_PRIMARY_KEY;
    public static final UniqueKey<StopsRecord> FEED_STOP_UNIQUE = UniqueKeys0.FEED_STOP_UNIQUE;
    public static final UniqueKey<StopsRecord> STOPS_PKEY = UniqueKeys0.STOPS_PKEY;
    public static final UniqueKey<TripsRecord> FEED_TRIP_UNIQUE = UniqueKeys0.FEED_TRIP_UNIQUE;
    public static final UniqueKey<TripsRecord> TRIPS_PKEY = UniqueKeys0.TRIPS_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AgencyRecord, Long> IDENTITY_AGENCY = createIdentity(Agency.AGENCY, Agency.AGENCY.AGENCY_INDEX);
        public static Identity<CalendarRecord, Long> IDENTITY_CALENDAR = createIdentity(Calendar.CALENDAR, Calendar.CALENDAR.SERVICE_INDEX);
        public static Identity<FeedsRecord, Long> IDENTITY_FEEDS = createIdentity(Feeds.FEEDS, Feeds.FEEDS.FEED_INDEX);
        public static Identity<RoutesRecord, Long> IDENTITY_ROUTES = createIdentity(Routes.ROUTES, Routes.ROUTES.ROUTE_INDEX);
        public static Identity<ShapesRecord, Long> IDENTITY_SHAPES = createIdentity(Shapes.SHAPES, Shapes.SHAPES.SHAPE_INDEX);
        public static Identity<StopsRecord, Long> IDENTITY_STOPS = createIdentity(Stops.STOPS, Stops.STOPS.STOP_INDEX);
        public static Identity<TripsRecord, Long> IDENTITY_TRIPS = createIdentity(Trips.TRIPS, Trips.TRIPS.TRIP_INDEX);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AdherenceRecord> ADHERENCE_PRIMARY_KEY = createUniqueKey(Adherence.ADHERENCE, "adherence_primary_key", Adherence.ADHERENCE.DATE, Adherence.ADHERENCE.HOUR, Adherence.ADHERENCE.ROUTE_ID, Adherence.ADHERENCE.DIRECTION_ID, Adherence.ADHERENCE.STOP_ID);
        public static final UniqueKey<AgencyRecord> AGENCY_PKEY = createUniqueKey(Agency.AGENCY, "agency_pkey", Agency.AGENCY.AGENCY_INDEX);
        public static final UniqueKey<AgencyRecord> FEED_AGENCY_UNIQUE = createUniqueKey(Agency.AGENCY, "feed_agency_unique", Agency.AGENCY.FEED_INDEX, Agency.AGENCY.AGENCY_ID);
        public static final UniqueKey<CalendarRecord> CALENDAR_PKEY = createUniqueKey(Calendar.CALENDAR, "calendar_pkey", Calendar.CALENDAR.SERVICE_INDEX);
        public static final UniqueKey<EventsRecord> EVENTS_PRIMARY_KEY = createUniqueKey(Events.EVENTS, "events_primary_key", Events.EVENTS.SERVICE_DATE, Events.EVENTS.TRIP_INDEX, Events.EVENTS.VEHICLE_ID, Events.EVENTS.STOP_ID);
        public static final UniqueKey<FeedsRecord> FEEDS_PKEY = createUniqueKey(Feeds.FEEDS, "feeds_pkey", Feeds.FEEDS.FEED_INDEX);
        public static final UniqueKey<PositionsRecord> POSITIONS_PRIMARY_KEY = createUniqueKey(Positions.POSITIONS, "positions_primary_key", Positions.POSITIONS.TIMESTAMP_UTC, Positions.POSITIONS.VEHICLE_ID);
        public static final UniqueKey<RoutesRecord> FEED_ROUTE_UNIQUE = createUniqueKey(Routes.ROUTES, "feed_route_unique", Routes.ROUTES.FEED_INDEX, Routes.ROUTES.ROUTE_ID);
        public static final UniqueKey<RoutesRecord> ROUTES_PKEY = createUniqueKey(Routes.ROUTES, "routes_pkey", Routes.ROUTES.ROUTE_INDEX);
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_pk", SchemaVersion.SCHEMA_VERSION.INSTALLED_RANK);
        public static final UniqueKey<ShapesRecord> SHAPES_PRIMARY_KEY = createUniqueKey(Shapes.SHAPES, "shapes_primary_key", Shapes.SHAPES.SHAPE_INDEX, Shapes.SHAPES.SHAPE_PT_SEQUENCE);
        public static final UniqueKey<StopTimesRecord> STOP_TIMES_PRIMARY_KEY = createUniqueKey(StopTimes.STOP_TIMES, "stop_times_primary_key", StopTimes.STOP_TIMES.TRIP_INDEX, StopTimes.STOP_TIMES.STOP_SEQUENCE);
        public static final UniqueKey<StopsRecord> FEED_STOP_UNIQUE = createUniqueKey(Stops.STOPS, "feed_stop_unique", Stops.STOPS.FEED_INDEX, Stops.STOPS.STOP_ID);
        public static final UniqueKey<StopsRecord> STOPS_PKEY = createUniqueKey(Stops.STOPS, "stops_pkey", Stops.STOPS.STOP_INDEX);
        public static final UniqueKey<TripsRecord> FEED_TRIP_UNIQUE = createUniqueKey(Trips.TRIPS, "feed_trip_unique", Trips.TRIPS.FEED_INDEX, Trips.TRIPS.TRIP_ID);
        public static final UniqueKey<TripsRecord> TRIPS_PKEY = createUniqueKey(Trips.TRIPS, "trips_pkey", Trips.TRIPS.TRIP_INDEX);
    }
}
