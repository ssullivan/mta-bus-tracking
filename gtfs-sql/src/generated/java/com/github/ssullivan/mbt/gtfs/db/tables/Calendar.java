/*
 * This file is generated by jOOQ.
*/
package com.github.ssullivan.mbt.gtfs.db.tables;


import com.github.ssullivan.mbt.gtfs.db.Keys;
import com.github.ssullivan.mbt.gtfs.db.Public;
import com.github.ssullivan.mbt.gtfs.db.tables.records.CalendarRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Calendar extends TableImpl<CalendarRecord> {

    private static final long serialVersionUID = 1285882998;

    /**
     * The reference instance of <code>public.calendar</code>
     */
    public static final Calendar CALENDAR = new Calendar();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CalendarRecord> getRecordType() {
        return CalendarRecord.class;
    }

    /**
     * The column <code>public.calendar.feed_index</code>.
     */
    public final TableField<CalendarRecord, Long> FEED_INDEX = createField("feed_index", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.calendar.service_index</code>.
     */
    public final TableField<CalendarRecord, Long> SERVICE_INDEX = createField("service_index", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('codegen.calendar_service_index_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.calendar.service_id</code>.
     */
    public final TableField<CalendarRecord, String> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>public.calendar.monday</code>.
     */
    public final TableField<CalendarRecord, Integer> MONDAY = createField("monday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.tuesday</code>.
     */
    public final TableField<CalendarRecord, Integer> TUESDAY = createField("tuesday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.wednesday</code>.
     */
    public final TableField<CalendarRecord, Integer> WEDNESDAY = createField("wednesday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.thursday</code>.
     */
    public final TableField<CalendarRecord, Integer> THURSDAY = createField("thursday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.friday</code>.
     */
    public final TableField<CalendarRecord, Integer> FRIDAY = createField("friday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.saturday</code>.
     */
    public final TableField<CalendarRecord, Integer> SATURDAY = createField("saturday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.sunday</code>.
     */
    public final TableField<CalendarRecord, Integer> SUNDAY = createField("sunday", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.calendar.start_date</code>.
     */
    public final TableField<CalendarRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>public.calendar.end_date</code>.
     */
    public final TableField<CalendarRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * Create a <code>public.calendar</code> table reference
     */
    public Calendar() {
        this("calendar", null);
    }

    /**
     * Create an aliased <code>public.calendar</code> table reference
     */
    public Calendar(String alias) {
        this(alias, CALENDAR);
    }

    private Calendar(String alias, Table<CalendarRecord> aliased) {
        this(alias, aliased, null);
    }

    private Calendar(String alias, Table<CalendarRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CalendarRecord, Long> getIdentity() {
        return Keys.IDENTITY_CALENDAR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CalendarRecord> getPrimaryKey() {
        return Keys.CALENDAR_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CalendarRecord>> getKeys() {
        return Arrays.<UniqueKey<CalendarRecord>>asList(Keys.CALENDAR_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Calendar as(String alias) {
        return new Calendar(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Calendar rename(String name) {
        return new Calendar(name, null);
    }
}
